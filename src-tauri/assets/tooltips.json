{
    "AppArgs"            : "The commandline to send to the app on launch. This can be set to “” when no additional arguments are needed.",
    "AppLaunch"          : "The path to the app executable that should be launched when running your game, relative to (and inside of) the BuildRoot. For Mac binaries, this should be the executable file contained within the .app folder, usually in the location Game.app/Contents/MacOS/Game.",
    "ArtifactId"         : "Specify the Artifact ID string that was provided along with your credentials.",
    "BuildRoot"          : "The path to the directory containing the binary to be read and processed. It can be an absolute path from the drive root or a relative path from the current working directory. Additionally, it is recommended that this path be located near the drive root, to avoid any files exceeding the OS MAX_PATH limit (typically 260 characters).",
    "BuildVersion"       : "The version string for the build. This needs to be unique for each build of a specific artifact, independent of platform. For example, BuildVersion-1.0 can only exists for Windows or Mac, not both. The build version string has the following restrictions: Must be between 1 and 100 chars in length, whitespace is not allowed, should only contain characters from the following sets a-z, A-Z, 0-9, or .+-_",
    "BuildVersionA"      : "The version string for the base binary image.",
    "BuildVersionB"      : "The version string for the binary image to be updated.",
    "ClientId"           : "Available in the Dev Portal under Your Product > Product Settings > General tab > Build Patch Tool Credentials.",
    "ClientSecret"       : "Available in the Dev Portal under Your Product > Product Settings > General tab > Build Patch Tool Credentials.",
    "CloudDir"           : "A directory where BuildPatchTool can save files to be uploaded, this can be empty each run. As with the BuildRoot, this can be an absolute or a relative path. (This location is used to cache information about existing binaries, and should be a different directory from the BuildRoot parameter. It is OK if this directory is initially empty; BuildPatchTool will download information as needed from the Epic backend and store it in the CloudDir.)",
    "CompareTagSet"      : "Specifies in quotes a comma separated list of install tags used to calculate differential statistics between the binaries. Multiple lists are allowed. Same rules apply as InstallTagsA.",
    "DestArtifactId"     : "Specifies the ID of the artifact the binary is being copied to.",
    "DiffAbortThreshold" : "Specified in bytes, an upper limit for original diffs to try to enhance. This allows short circuiting lengthy optimisation attempts on large diffs which may not benefit. Range accepted is n >= 1GB, defaults to never abort.",
    "FileAttributeList"  : "A path to a text file containing a list of files and corresponding special attributes (e.g. executable bit) that should be set. See Setting Special File Attributes section for a description of the file contents. Note that the attributes file should not be inside your BuildRoot to ensure that it does not get erroneously included in your binary upload.",
    "FileIgnoreList"     : "A path to a text file containing files to be included in the binary. The files must be BuildRoot relative. This is an alternative to using FileIgnoreList.",
    "FileList"           : "A path to a text file containing files to be included in the binary. The files must be BuildRoot relative. This is an alternative to using FileIgnoreList.",
    "InstallTagsA"       : "Specifies in quotes a comma separated list of install tags used on BuildVersionA. You should include an empty string if you want to count untagged files. Leaving the parameter out will use all files. InstallTagsA=\"\" will be untagged files only. InstallTagsA=\",tag\" will be untagged files plus files tagged with 'tag'. InstallTagsA=\"tag\" will be files tagged with 'tag' only.",
    "InstallTagsB"       : "Specifies in quotes a comma separated list of install tags used on BuildVersionB. Same rules apply as InstallTagsA.",
    "Label"              : "The label name to apply to your binary. This must be the string \"Live\" when setting a binary as live to the public. Additionally, the string “Archive” can be used to label a single binary per platform that should be retained even after it is no longer live. Unlabeled binaries will be deleted after roughly a week by automatic cleanup jobs.",
    "Num"                : "Restrict the number of binaries returned. Binaries are returned in date order with the most recent first.",
    "OnlyLabeled"        : "Only list binaries that are associated with a label.",
    "OrganizationId"     : "Use the Organization ID string that was provided along with your credentials.",
    "OutputFile"         : "The list of binaries will be output to the specified file as a JSON array.",
    "Platform"           : "The platform associated with the binary to be labeled. Currently must be one of: [Windows, Win32, Mac]",
    "ProductId"          : "Use the Product ID string that was provided along with your credentials.",
    "SandboxId"          : "Specifies the id of the sandbox to label this binary under. If not provided, the binary will be labeled for public sandbox.",
    "SourceArtifactId"   : "Specifies the ID of the artifact the binary is being copied from."
}

